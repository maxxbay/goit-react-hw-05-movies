{"version":3,"file":"static/js/971.ea06f0b6.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","API/get-search-movies.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/MoviesPage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { accentTextColor, mainTextColor } from 'utilities/variables/css-styles';\n\nexport const Item = styled.li`\n  @media (max-width: 767px) {\n    margin-bottom: 50px;\n  }\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    width: calc((100% - 4 * 10px) / 2);\n    margin: 10px;\n  }\n  @media (min-width: 1440px) {\n    width: calc((100% - 6 * 10px) / 3);\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n  color: ${accentTextColor};\n  width: 300px;\n  margin-bottom: 15px;\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  margin-bottom: 15px;\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const VoteWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const VoteAverage = styled.p`\n  color: ${mainTextColor};\n`;\n\nexport const VoteCount = styled.p`\n  color: ${mainTextColor};\n`;\n\nexport const Value = styled.span`\n  font-weight: 600;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport posterBg from '../../utilities/images/poster.jpg';\nimport {\n  Item,\n  Title,\n  Poster,\n  VoteWrapper,\n  VoteAverage,\n  VoteCount,\n  Value,\n} from './MovieCard.styled';\n\nfunction MovieCard({ id, title, poster, voteAverage, voteCount }) {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <Title>{title ? title : 'Movie without a title'}</Title>\n        <Poster\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : posterBg}\n          alt={title}\n        />\n        <VoteWrapper>\n          <VoteAverage>\n            Vote average: <Value>{voteAverage}</Value>\n          </VoteAverage>\n          <VoteCount>\n            Vote count:<Value> {voteCount}</Value>\n          </VoteCount>\n        </VoteWrapper>\n      </Link>\n    </Item>\n  );\n}\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  voteAverage: PropTypes.number.isRequired,\n  voteCount: PropTypes.number.isRequired,\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.ul`\n  @media (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    margin: -10px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport MovieCard from 'components/MovieCard';\nimport { Wrapper } from './MoviesList.styled';\n\nfunction MoviesList({ movies }) {\n  return (\n    <Wrapper>\n      {movies.map(({ id, title, poster, voteAverage, voteCount }) => {\n        return (\n          <MovieCard\n            key={id}\n            id={id}\n            title={title}\n            poster={poster}\n            voteAverage={voteAverage}\n            voteCount={voteCount}\n          />\n        );\n      })}\n    </Wrapper>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster: PropTypes.string.isRequired,\n      voteAverage: PropTypes.number.isRequired,\n      voteCount: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","async function getSearchMovies(query, page = 1) {\n  const key = '228bf13a475fd3c7d68f4b12f31b0a1c';\n  const url = `https://api.themoviedb.org/3/search/movie`;\n  const filter = `?api_key=${key}&query=${query}&language=en-US&page=${page}&include_adult=false`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport default getSearchMovies;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import styled from '@emotion/styled';\nimport {\n  secondBgColor,\n  secondTextColor,\n  mainHoverEffect,\n  accentBgColor,\n} from 'utilities/variables/css-styles';\n\nexport const FormSearch = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const InputSearch = styled.input`\n  width: 200px;\n  height: 30px;\n  padding: 0 10px 0 10px;\n  margin-right: 15px;\n  border: 1px solid ${secondBgColor};\n  outline: none;\n  @media (min-width: 768px) {\n    width: 800px;\n  }\n`;\n\nexport const ButtonSubmit = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 30px;\n  margin-bottom: 30px;\n  font-size: 15px;\n  font-family: inherit;\n  background-color: ${secondBgColor};\n  color: ${secondTextColor};\n  border: none;\n  cursor: pointer;\n  transition: background-color ${mainHoverEffect}, color ${mainHoverEffect};\n  :hover {\n    background-color: ${accentBgColor};\n    color: ${secondTextColor};\n  }\n  @media (min-width: 768px) {\n    width: 150px;\n  }\n`;\n","import { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport Container from 'components/Container';\nimport { FormSearch, InputSearch, ButtonSubmit } from './SearchBar.styled';\nimport { FaSearch } from 'react-icons/fa';\n\nfunction SearchBar() {\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const queryValue = searchQuery.get('query') ?? '';\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  function handleInput(e) {\n    if (e.currentTarget.value.toLowerCase() !== searchQuery)\n      setSearchQuery({ query: e.currentTarget.value.toLowerCase() });\n  }\n\n  function onSubmitForm(e) {\n    e.preventDefault();\n    const value = e.target.elements.query.value;\n\n    if (queryValue.trim() === '') {\n      console.log('ERROR');\n      return;\n    }\n    navigate({\n      ...location,\n      search: `query=${value}`,\n    });\n  }\n\n  return (\n    <Container>\n      <FormSearch onSubmit={onSubmitForm}>\n        <InputSearch\n          type=\"text\"\n          name=\"query\"\n          value={queryValue}\n          onChange={handleInput}\n        />\n        <ButtonSubmit type=\"submit\">\n          <FaSearch />\n        </ButtonSubmit>\n      </FormSearch>\n    </Container>\n  );\n}\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport getSearchMovies from 'API/get-search-movies';\nimport SearchBar from 'components/SearchBar';\nimport Container from 'components/Container';\nimport MoviesList from 'components/MoviesList';\n\nfunction MoviesPage() {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search).get('query') ?? '';\n\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    if (query !== '') {\n      getSearchMovies(query).then(({ results }) => {\n        const moviesArr = [];\n\n        results.map(\n          ({ id, original_title, poster_path, vote_average, vote_count }) => {\n            const movie = {\n              id,\n              title: original_title,\n              poster: poster_path,\n              voteAverage: vote_average,\n              voteCount: vote_count,\n            };\n\n            return moviesArr.push(movie);\n          }\n        );\n\n        setMovies(moviesArr);\n      });\n    }\n  }, [query]);\n\n  return (\n    <>\n      <SearchBar />\n      {movies && (\n        <Container isPadding>\n          <MoviesList movies={movies} />\n        </Container>\n      )}\n    </>\n  );\n}\n\nexport default MoviesPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Item","styled","Title","accentTextColor","Poster","VoteWrapper","VoteAverage","mainTextColor","VoteCount","Value","id","title","poster","voteAverage","voteCount","location","useLocation","to","state","from","src","posterBg","alt","Wrapper","movies","map","getSearchMovies","query","page","url","filter","fetch","response","json","data","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","FormSearch","InputSearch","secondBgColor","ButtonSubmit","secondTextColor","mainHoverEffect","accentBgColor","useSearchParams","searchQuery","setSearchQuery","queryValue","get","navigate","useNavigate","Container","onSubmit","e","preventDefault","elements","trim","search","console","log","type","name","onChange","currentTarget","toLowerCase","URLSearchParams","useState","setMovies","useEffect","then","results","moviesArr","movie","original_title","poster_path","vote_average","vote_count","isPadding","MoviesList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","err","undefined"],"sourceRoot":""}