{"version":3,"file":"static/js/689.695b0ea4.chunk.js","mappings":"6OAAeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,mFACc,mCACNC,EAFR,6CAEoDD,EAFpD,YAGQE,EAHR,mBACc,mCADd,mCAKyBC,MAAM,GAAD,OAAIF,GAAJ,OAAUC,IALxC,cAKQE,EALR,gBAMqBA,EAASC,OAN9B,cAMQC,EANR,yBAQSA,GART,mEAWA,I,QAAA,E,SAXeP,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,mCCGFQ,EAAOC,EAAAA,EAAAA,GAAH,sBAEJC,EAAOD,EAAAA,EAAAA,GAAH,kHACKE,EAAAA,IAMTC,EAAQH,EAAAA,EAAAA,GAAH,8DACPI,EAAAA,IAIEC,EAAOL,EAAAA,EAAAA,EAAH,2C,SCcjB,MA3BA,YAAmC,IAAZM,EAAW,EAAXA,QACrB,OACE,SAACC,EAAA,EAAD,CAAWC,WAAS,EAApB,UACE,SAACT,EAAD,UACGO,EAAQG,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC1B,OACE,UAACX,EAAD,YACE,SAACE,EAAD,UAAQQ,KACR,SAACN,EAAD,UAAOO,MAFEF,EAKd,OAIR,ECkBD,MA/BA,WACE,IAAQlB,GAAYqB,EAAAA,EAAAA,MAAZrB,QACR,GAA8BsB,EAAAA,EAAAA,UAAS,MAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACRzB,EAAgBC,GAASyB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACzBC,EAAa,GAEnBD,EAAQT,KAAI,YAA8B,IAClCW,EAAS,CACbV,GAFqC,EAA1BA,GAGXC,OAHqC,EAAtBA,OAIfC,KAJqC,EAAdS,SAOzB,OAAOF,EAAWG,KAAKF,EACxB,IAEDL,EAAWI,EACZ,GACF,GAAE,CAAC3B,IAEGc,GAAWA,EAAQiB,OAAS,GACjC,SAAC,EAAD,CAAajB,QAASA,KAEtB,SAACC,EAAA,EAAD,CAAWC,WAAS,EAApB,UACE,uEAGL,C","sources":["API/get-movie-reviews.js","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","pages/Reviews.js"],"sourcesContent":["async function getMovieReviews(movieId) {\n  const key = '228bf13a475fd3c7d68f4b12f31b0a1c';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  const filter = `?api_key=${key}&language=en-US&page=1`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport default getMovieReviews;\n","import styled from '@emotion/styled';\nimport { accentBgColor, accentTextColor } from 'utilities/variables/css-styles';\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li`\n  border: 1px solid ${accentBgColor};\n  border-radius: 5px;\n  padding: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  color: ${accentTextColor};\n  margin-bottom: 15px;\n`;\n\nexport const Text = styled.p`\n  line-height: 2;\n`;\n","import PropTypes from 'prop-types';\nimport Container from 'components/Container';\nimport { List, Item, Title, Text } from './ReviewsList.styled';\n\nfunction ReviewsList({ reviews }) {\n  return (\n    <Container isPadding>\n      <List>\n        {reviews.map(({ id, author, text }) => {\n          return (\n            <Item key={id}>\n              <Title>{author}</Title>\n              <Text>{text}</Text>\n            </Item>\n          );\n        })}\n      </List>\n    </Container>\n  );\n}\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ReviewsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovieReviews from 'API/get-movie-reviews';\nimport ReviewsList from 'components/ReviewsList';\nimport Container from 'components/Container';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(({ results }) => {\n      const reviewsArr = [];\n\n      results.map(({ id, author, content }) => {\n        const review = {\n          id,\n          author,\n          text: content,\n        };\n\n        return reviewsArr.push(review);\n      });\n\n      setReviews(reviewsArr);\n    });\n  }, [movieId]);\n\n  return reviews && reviews.length > 0 ? (\n    <ReviewsList reviews={reviews} />\n  ) : (\n    <Container isPadding>\n      <h2>We don't have any reviews for this movie.</h2>\n    </Container>\n  );\n}\n\nexport default Reviews;\n"],"names":["getMovieReviews","movieId","url","filter","fetch","response","json","data","List","styled","Item","accentBgColor","Title","accentTextColor","Text","reviews","Container","isPadding","map","id","author","text","useParams","useState","setReviews","useEffect","then","results","reviewsArr","review","content","push","length"],"sourceRoot":""}