{"version":3,"file":"static/js/68.1eaa1a99.chunk.js","mappings":"4OAAeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,mFACc,mCACNC,EAFR,6CAEoDD,EAFpD,YAGQE,EAHR,mBACc,mCADd,4BAKyBC,MAAM,GAAD,OAAIF,GAAJ,OAAUC,IALxC,cAKQE,EALR,gBAMqBA,EAASC,OAN9B,cAMQC,EANR,yBAQSA,GART,mEAWA,I,UAAA,E,SAXeP,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,uGCGFQ,EAAOC,EAAAA,EAAAA,GAAH,0HAQJC,EAAOD,EAAAA,EAAAA,GAAH,sLAUJE,EAAeF,EAAAA,EAAAA,IAAH,4GAOZG,EAAQH,EAAAA,EAAAA,IAAH,yCAILI,EAAOJ,EAAAA,EAAAA,EAAH,+EAGNK,EAAAA,I,SC9BX,SAASC,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAEpB,OACE,SAACC,EAAA,EAAD,CAAWC,WAAS,EAApB,UACE,SAACV,EAAD,UACGQ,EAAOG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACE,UAACZ,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEW,IACED,EAAK,0CAAsCA,GAAUE,EAEvDC,IAAKJ,OAGT,SAACR,EAAD,UAAOQ,MATED,EAYd,OAIR,CAEDL,EAAWW,UAAY,CACrBV,OAAQW,IAAAA,QACNA,IAAAA,MAAgB,CACdP,GAAIO,IAAAA,OAAAA,WACJN,KAAMM,IAAAA,OAAAA,WACNL,MAAOK,IAAAA,OAAAA,eAKb,QCVA,MAzBA,WACE,IAAQ1B,GAAY2B,EAAAA,EAAAA,MAAZ3B,QACR,GAA4B4B,EAAAA,EAAAA,UAAS,MAArC,eAAOb,EAAP,KAAec,EAAf,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR/B,EAAgBC,GAAS+B,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACzBC,EAAY,GAElBD,EAAKd,KAAI,YAAiC,IAClCgB,EAAQ,CACZf,GAFqC,EAA7BA,GAGRC,KAHqC,EAAzBA,KAIZC,MAJqC,EAAnBc,cAOpB,OAAOF,EAAUG,KAAKF,EACvB,IAEDL,EAAUI,EACX,GACF,GAAE,CAACjC,IAEGe,IAAU,SAAC,EAAD,CAAYA,OAAQA,GACtC,C","sources":["API/get-movie-credits.jsx","components/ActorsList/ActorsList.styled.js","components/ActorsList/ActorsList.jsx","pages/Cast.js"],"sourcesContent":["async function getMovieCredits(movieId) {\n  const key = '228bf13a475fd3c7d68f4b12f31b0a1c';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const filter = `?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport default getMovieCredits;\n","import styled from '@emotion/styled';\nimport { accentTextColor } from 'utilities/variables/css-styles';\n\nexport const List = styled.ul`\n  @media (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    margin: -10px;\n  }\n`;\n\nexport const Item = styled.li`\n  @media (max-width: 767px) {\n    margin-bottom: 50px;\n  }\n  @media (min-width: 768px) {\n    width: calc((100% - 10px * 8) / 4);\n    margin: 10px;\n  }\n`;\n\nexport const PhotoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 375px;\n  margin-bottom: 15px;\n`;\n\nexport const Photo = styled.img`\n  width: 250px;\n`;\n\nexport const Name = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  color: ${accentTextColor};\n`;\n","import PropTypes from 'prop-types';\nimport actorBg from '../../utilities/images/actor.png';\nimport Container from 'components/Container';\nimport { List, Item, PhotoWrapper, Photo, Name } from './ActorsList.styled';\n\nfunction ActorsList({ actors }) {\n  // console.log({ actors });\n  return (\n    <Container isPadding>\n      <List>\n        {actors.map(({ id, name, photo }) => {\n          return (\n            <Item key={id}>\n              <PhotoWrapper>\n                <Photo\n                  src={\n                    photo ? `https://image.tmdb.org/t/p/w500/${photo}` : actorBg\n                  }\n                  alt={name}\n                />\n              </PhotoWrapper>\n              <Name>{name}</Name>\n            </Item>\n          );\n        })}\n      </List>\n    </Container>\n  );\n}\n\nActorsList.prototype = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      photo: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ActorsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovieCredits from 'API/get-movie-credits';\nimport ActorsList from 'components/ActorsList';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(({ cast }) => {\n      const actorsArr = [];\n\n      cast.map(({ id, name, profile_path }) => {\n        const actor = {\n          id,\n          name,\n          photo: profile_path,\n        };\n\n        return actorsArr.push(actor);\n      });\n\n      setActors(actorsArr);\n    });\n  }, [movieId]);\n\n  return actors && <ActorsList actors={actors} />;\n}\n\nexport default Cast;\n"],"names":["getMovieCredits","movieId","url","filter","fetch","response","json","data","List","styled","Item","PhotoWrapper","Photo","Name","accentTextColor","ActorsList","actors","Container","isPadding","map","id","name","photo","src","actorBg","alt","prototype","PropTypes","useParams","useState","setActors","useEffect","then","cast","actorsArr","actor","profile_path","push"],"sourceRoot":""}